apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: postgres-from-source
      app.kubernetes.io/component: postgres-from-source
      app.kubernetes.io/instance: postgres-from-source
    name: postgres-from-source
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: postgres-from-source
      app.kubernetes.io/component: postgres-from-source
      app.kubernetes.io/instance: postgres-from-source
    name: postgres-from-source
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: postgres-from-source:latest
    postCommit: {}
    resources: {}
    source:
      contextDir: postgres
      git:
        uri: https://github.com/shawn-yang-1979/examples
      sourceSecret:
        name: github
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: postgres:12
          namespace: shawn-yang-ibm-dev
      type: Docker
    triggers:
    - github:
        secret: SoY84AJL-MahL5iC5wIC
      type: GitHub
    - generic:
        secret: eUrIBU6j3Wf-LWrgLARi
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: postgres-from-source
      app.kubernetes.io/component: postgres-from-source
      app.kubernetes.io/instance: postgres-from-source
    name: postgres-from-source
  spec:
    replicas: 1
    selector:
      deploymentconfig: postgres-from-source
    strategy:
      type: Recreate
      recreateParams:
        pre:
          failurePolicy: Abort
          execNewPod:
            containerName: postgres-from-source
            command: ["echo", "password is $(POSTGRES_PASSWORD)"]
        mid:
          failurePolicy: Abort
          execNewPod:
            containerName: postgres-from-source
            command: ["echo", "recreating"]           
        post:
          failurePolicy: Abort
          execNewPod:
            containerName: postgres-from-source
            command: ["echo", "done"]
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deploymentconfig: postgres-from-source
      spec:
        containers:
        - env:
          - name: PGDATA
            value: /temp/data
          - name: POSTGRES_PASSWORD
            value: postgrespw
          image: postgres-from-source:latest
          name: postgres-from-source
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-from-source-volume-1
        volumes:
        - emptyDir: {}
          name: postgres-from-source-volume-1
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgres-from-source
        from:
          kind: ImageStreamTag
          name: postgres-from-source:latest
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: postgres-from-source
      app.kubernetes.io/component: postgres-from-source
      app.kubernetes.io/instance: postgres-from-source
    name: postgres-from-source
  spec:
    ports:
    - name: 5432-tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      deploymentconfig: postgres-from-source
  status:
    loadBalancer: {}
kind: List
metadata: {}
